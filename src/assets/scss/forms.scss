// Form
form,
.form {
  padding-left: 15px;

  &.ng-invalid {
    &.ng-touched,
    &.ng-dirty {
      border-left: 5px solid $error-red;
    }
  }

  select {
    &.ng-invalid.ng-touched {
      border: 4px solid $error-red;
    }
  }

  .form-control {
    &.is-invalid,
    &.is-invalid:focus {
      border: 4px solid $error-red;
    }
  }

  .error {
    font-size: 16px;
    font-weight: 600;
    line-height: 1.25;
    margin-bottom: 15px;
    padding: 0;
    color: $error-red;
    background-color: map-get($color, white);
    border: 0;

    ~ .error {
      margin-top: 1.5rem;
    }
  }

  .invalid-feedback {
    color: $error-red;
  }

  .field-group {
    margin-bottom: 3rem !important;
  }

  .form-group {
    margin-top: 3rem;
    margin-bottom: 5rem;

    // .form-control {
      // height: 4rem;
    // }
  }

  .form-group,
  .field-group {

    &:first-child {
      padding: 0;
    }

    .panel-border-narrow {

      @include rem(margin, 20px 0 0 20px);
    }

    input,
    select {
      height: 38px;

      &[text] {
        width: 293px;
      }
    }

    input,
    textarea,
    .textarea,
    select {
      border: 2px solid $black;
      background: $white;
      border-radius: 0;
      outline: none;
      color: $black;

      @include rem(font-size, 16px);
    }

    input:focus,
    textarea:focus,
    select:focus {
      border: 2px solid $black;
      color: $black;

      @include box-shadow(0, 0, 0, 0.2rem, $focus-yellow);

      &.file-upload-input {
        border: 2px solid $focus-yellow !important;

        @include rem(padding, 3px 0 0 3px);
      }
    }

    label, .label {
      padding: 0 0 10px 0;
      margin: 0 0 2rem 0;
      letter-spacing: 1px;

      @include rem(font-size, 19px);
      @include rem(line-height, 20px);
    }

    .field-comment-text {
      color: $light-grey-text;

      @include rem(font-size, 19px);
    }
  }

  .field-group {
    &.is-invalid {
      @include rem(padding, 0 0 0 30px);
      @include rem(margin, 0 0 20px 0);
    }
  }
}

// Multiple choice styles
.multiple-choice {
  display: block;
  float: none;
  clear: left;
  position: relative;
  padding: 8px 0 0 45px;
  margin-bottom: 20px;
  height: 34px;
}

@media (min-width: 641px) {
  .multiple-choice {
  }
}

.multiple-choice input {
  position: absolute;
  cursor: pointer;
  left: 0;
  top: 0;
  width: 38px;
  height: 38px;
  z-index: 1;
  margin: 0;
  zoom: 1;
  filter: alpha(opacity=0);
  opacity: 0;
}

label {
  select,
  input {
    margin-top: 10px;
  }
}

.multiple-choice label {
  cursor: pointer;
  padding: 0 10px 0 12px;
  display: block;
  -ms-touch-action: manipulation;
  touch-action: manipulation;
}

@media (min-width: 641px) {
  .multiple-choice label {
    float: left;
  }
}

.multiple-choice [type=radio] + label::before {
  content: "";
  border: 2px solid;
  background: transparent;
  width: 34px;
  height: 34px;
  position: absolute;
  top: 0;
  left: 0;
  -webkit-border-radius: 50%;
  -moz-border-radius: 50%;
  border-radius: 50%;
}

.multiple-choice [type=radio] + label::after {
  content: "";
  border: 10px solid;
  width: 0;
  height: 0;
  position: absolute;
  top: 7px;
  left: 7px;
  -webkit-border-radius: 50%;
  -moz-border-radius: 50%;
  border-radius: 50%;
  zoom: 1;
  filter: alpha(opacity=0);
  opacity: 0;
}

.multiple-choice [type=radio]:focus + label::before {
  -webkit-box-shadow: 0 0 0 4px $focus-yellow;
  -moz-box-shadow: 0 0 0 4px $focus-yellow;
  box-shadow: 0 0 0 4px $focus-yellow;
}

.multiple-choice input:checked + label::after {
  zoom: 1;
  filter: alpha(opacity=100);
  opacity: 1;
}

.multiple-choice input:disabled {
  cursor: default;
}

.multiple-choice input:disabled + label {
  zoom: 1;
  filter: alpha(opacity=50);
  opacity: 0.5;
  cursor: default;
}

.multiple-choice:last-child,
.multiple-choice:last-of-type {
  margin-bottom: 0;
}

.inline .multiple-choice {
  clear: none;
}

@media (min-width: 641px) {
  .inline .multiple-choice {
    margin-bottom: 0;
    margin-right: 30px;
  }
}

/* Hide the browser's default checkbox */
.check input {
  position: absolute;
  opacity: 0;
  cursor: pointer;

  &:focus {
    ~.checkmark {
      -webkit-box-shadow: 0 0 0 4px $focus-yellow;
      -moz-box-shadow: 0 0 0 4px $focus-yellow;
      box-shadow: 0 0 0 4px $focus-yellow;
    }
  }
}

/* Create a custom checkbox */
.checkmark {
  position: absolute;
  height: 40px;
  width: 40px;
  background-color: #fff;
  border: 2px solid black;
}

/* On mouse-over, add a grey background color */
.check:hover input~.checkmark {
  background-color: #fff;
  cursor: pointer;
}

/* When the checkbox is checked, add a blue background */
.check input:checked~.checkmark {
  background-color: #fff;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.check input:checked~.checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.check .checkmark:after {
  left: 12px;
  top: 5px;
  width: 12px;
  height: 23px;
  border: solid black;
  border-width: 0 5px 5px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

.check-label {
  margin-left: 55px;
  padding-top: 10px;
  height: 40px;
  display: inline-block;
  vertical-align: middle;
}
